spring:
  main:
    banner-mode: console
    log-startup-info: false
  application:
    name: consumer


  datasource:
    url: "jdbc:mysql://localhost:3306/kafkacheck?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&tinyInt1isBit=false&useSSL=false"
    driver-class-name: com.mysql.jdbc.Driver
    username: kafkacheck
    password: kafkacheck
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect
  http:
    encoding:
      enabled: true
      charset: UTF-8
      force: true

  webflux:
    date-format: "yyyy-MM-dd'T'HH:mm:ss.SSSX"

  jackson:
    date-format: "yyyy-MM-dd'T'HH:mm:ss.SSSX"
    joda-date-time-format: "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
    serialization:
      write-dates-as-timestamps: false
      WRITE_DATES_AS_TIMESTAMPS: false
      indent-output: true
    locale: it_IT
    time-zone: GMT+1

  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
          auto-add-partitions: true
        bindings:
          notification-in:
            consumer:
              configuration:
                concurrency: 1
                max-attempts: 3
                partitioned: true
          mail-kafka-in:
            consumer:
              configuration:
                # enable.auto.commit: true
                # auto.commit.interval.ms: 0
                max.poll.records: 1
                max.poll.interval.ms: 120000
                partition.assignment.strategy: org.apache.kafka.clients.consumer.RangeAssignor
                auto.offset.reset: earliest
          message-kafka-in:
            consumer:
              configuration:
                # enable.auto.commit: true
                # auto.commit.interval.ms: 0
                max.poll.records: 1
                max.poll.interval.ms: 120000
                partition.assignment.strategy: org.apache.kafka.clients.consumer.RangeAssignor
                auto.offset.reset: earliest
          mms-kafka-in:
            consumer:
              configuration:
                # enable.auto.commit: true
                # auto.commit.interval.ms: 0
                max.poll.records: 1
                max.poll.interval.ms: 120000
                partition.assignment.strategy: org.apache.kafka.clients.consumer.RangeAssignor
                auto.offset.reset: earliest
          sms-kafka-in:
            consumer:
              configuration:
                # enable.auto.commit: true
                # auto.commit.interval.ms: 0
                max.poll.records: 1
                max.poll.interval.ms: 120000
                partition.assignment.strategy: org.apache.kafka.clients.consumer.RangeAssignor
                auto.offset.reset: earliest
      bindings:
        notification-in: # consumer
          destination: notification
          contentType: application/json
          consumer:
            #enable.auto.commit: true
            #auto.commit.interval.ms: 0
            concurrency: 1
            max-attempts: 3
            partitioned: true
        mail-kafka-in: # consumer
          group: ${spring.application.name}
          destination: mail-kafka-topic
          contentType: application/json
          consumer:
            #enable.auto.commit: true
            #auto.commit.interval.ms: 0
            concurrency: 1
            max-attempts: 3
            partitioned: true
        message-kafka-in: # consumer
          group: ${spring.application.name}
          destination: message-kafka-topic
          contentType: application/json
          consumer:
            concurrency: 1
            max-attempts: 3
            partitioned: true
        mms-kafka-in: # consumer
          group: ${spring.application.name}
          destination: mms-kafka-topic
          contentType: application/json
          consumer:
            concurrency: 1
            max-attempts: 3
            partitioned: true
        sms-kafka-in: # consumer
          group: ${spring.application.name}
          destination: sms-kafka-topic
          contentType: application/json
          consumer:
            concurrency: 1
            max-attempts: 3
            partitioned: true

server:
  port: 0
  compression:
    enabled: true
    mime-types: text/html,text/css,application/json
    min-response-size: 2048

defaut:
  waittime: 1000L
  count: 10

logging:
  level:
    root: INFO
    it.usuratonkachi.kafka.reactor.config: INFO
---
spring:
  profiles: 1
---
spring:
  profiles: 2
---
spring:
  profiles: 3
---
spring:
  profiles: 4
---
spring:
  profiles: 5
